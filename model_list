#a Copyright
#  
#  This file 'model_list' copyright Gavin J Stark 2016, 2017
#  
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# @file  model_list
# @brief Description of modules/models for CDL building
#
# Standard CDL descriptor file, to enable building/linking of verilog and C sims
# with python simulation library
#
cdl_options ass:on

c_model cmodel/src   srams
c_model cmodel/src   axi_master      inc:cmodel/inc
c_src cmodel/src   ef_object      inc:cmodel/inc
c_src cmodel/src   axi_types      inc:cmodel/inc
c_model cmodel/src   bbc_display     inc:cmodel/inc
c_model cmodel/src   bbc_floppy      inc:cmodel/inc
c_src cmodel/src     bbc_floppy_disk inc:cmodel/inc
c_src cmodel/src     image_io        inc:cmodel/inc
c_src cmodel/src     fb              inc:cmodel/inc
c_src cmodel/src     vnc_rfb         inc:cmodel/inc
#c_src cmodel/src    bbc_display_vnc inc:cmodel/inc
c_src cmodel/src     bbc_shm         inc:cmodel/inc
cdl cdl/axi/tb_src tb_axi inc:cdl/inc

cdl cdl/utils/src    hysteresis_switch    inc:cdl/inc
cdl cdl/utils/src    dprintf              inc:cdl/inc
cdl cdl/utils/tb_src tb_hysteresis_switch inc:cdl/inc
cdl cdl/utils/src dprintf_2_mux     inc:cdl/inc inc:cdl/utils/src rmt:gt_generic_valid_req=t_dprintf_req_2 rmn:generic_valid_ack_mux=dprintf_2_mux
cdl cdl/utils/src dprintf_4_mux   inc:cdl/inc inc:cdl/utils/src rmt:gt_generic_valid_req=t_dprintf_req_4 rmn:generic_valid_ack_mux=dprintf_4_mux
cdl cdl/utils/tb_src tb_dprintf      inc:cdl/inc
cdl cdl/utils/tb_src tb_dprintf_mux  inc:cdl/inc

cdl cdl/video/src saa5050      inc:cdl/inc
cdl cdl/video/src crtc6845     inc:cdl/inc
cdl cdl/video/src framebuffer  inc:cdl/inc
cdl cdl/video/src framebuffer_timing  inc:cdl/inc
cdl cdl/video/src framebuffer_teletext  inc:cdl/inc
cdl cdl/video/src teletext     inc:cdl/inc
cdl cdl/video/tb_src tb_teletext     inc:cdl/inc
cdl cdl/video/tb_src tb_framebuffer_teletext     inc:cdl/inc

cdl cdl/cpu/src cpu6502        inc:cdl/inc
cdl cdl/cpu/tb_src tb_6502     inc:cdl/inc

cdl cdl/cpu/riscv/src    riscv_jtag_apb_dm           inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32_debug             inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32_pipeline_debug    inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32_fetch_debug          inc:cdl/inc
#cdl cdl/cpu/riscv/src    riscv_minimal_debug         inc:cdl/inc
cdl cdl/cpu/riscv/tb_src tb_riscv_jtag_debug         inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32_muldiv            inc:cdl/inc
cdl cdl/cpu/riscv/tb_src tb_riscv_i32_muldiv         inc:cdl/inc

# The decoders are separate for i32 and i32c
# but the e32 and e32c varaints use the same source cdoe and just force enable e32 mode
cdl cdl/cpu/riscv/src    riscv_i32_decode     inc:cdl/inc 
cdl cdl/cpu/riscv/src    riscv_i32c_decode    inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_e32_decode     inc:cdl/inc inc:cdl/cpu/riscv/src dc:e32_force_enable=1 rmn:riscv_i32_decode=riscv_e32_decode
cdl cdl/cpu/riscv/src    riscv_e32c_decode    inc:cdl/inc inc:cdl/cpu/riscv/src dc:e32_force_enable=1 rmn:riscv_i32c_decode=riscv_e32c_decode
# These modules are suitable for i/e32[c][m]
cdl cdl/cpu/riscv/src    riscv_i32_trace        inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32_alu          inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32_dmem_request inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32_dmem_read_data    inc:cdl/inc
# CSRs minimal does support minimal CSRs for just machine mode, but might be reduced in size with some constant definition
cdl cdl/cpu/riscv/src    riscv_csrs_minimal   inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32_pipeline_control  inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32_pipeline_control_fetch_req  inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32_pipeline_control_fetch_data  inc:cdl/inc
# These modules are suitable for i/e32[c][m]
cdl cdl/cpu/riscv/src    riscv_i32c_pipeline  inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32c_pipeline2 inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32c_pipeline3 inc:cdl/inc
# These modules are i/e32[c] capable - they tie in the pipelines and no coprocessors, so they cannot support m
cdl cdl/cpu/riscv/src    riscv_i32_minimal_apb   inc:cdl/inc
cdl cdl/cpu/riscv/src    riscv_i32_minimal   inc:cdl/inc
cdl cdl/cpu/riscv/tb_src tb_riscv_i32_minimal           inc:cdl/inc  dc:i32c_force_disable=1
cdl cdl/cpu/riscv/tb_src tb_riscv_i32c_minimal          inc:cdl/inc  inc:cdl/cpu/riscv/tb_src dc:i32c_force_disable=0 rmn:tb_riscv_i32_minimal=tb_riscv_i32c_minimal
cdl cdl/cpu/riscv/tb_src tb_riscv_i32c_pipeline3        inc:cdl/inc
cdl cdl/cpu/riscv/tb_src tb_riscv_i32mc_pipeline3       inc:cdl/inc

#cdl cdl/cpu/clarvi/src    clarvi        inc:cdl/inc
#cdl cdl/cpu/clarvi/src    clarvi_csrs    inc:cdl/inc
#cdl cdl/cpu/clarvi/tb_src tb_clarvi        inc:cdl/inc

cdl cdl/jtag/src jtag_tap   inc:cdl/inc
cdl cdl/jtag/src jtag_apb   inc:cdl/inc
cdl cdl/jtag/tb_src tb_jtag_apb_timer   inc:cdl/inc

cdl cdl/serial/src via6522     inc:cdl/inc
cdl cdl/serial/src acia6850    inc:cdl/inc

cdl cdl/storage/disk/src       fdc8271 inc:cdl/inc

cdl cdl/microcomputers/picoriscv/src picoriscv_clocking  inc:cdl/inc
#cdl cdl/microcomputers/picoriscv/src picoriscv           inc:cdl/inc
#cdl cdl/microcomputers/picoriscv/tb_src tb_picoriscv           inc:cdl/inc

cdl cdl/microcomputers/bbc/src bbc_vidproc          inc:cdl/inc
cdl cdl/microcomputers/bbc/src bbc_micro_keyboard   inc:cdl/inc
cdl cdl/microcomputers/bbc/src bbc_keyboard_csr     inc:cdl/inc
cdl cdl/microcomputers/bbc/src bbc_keyboard_ps2     inc:cdl/inc
cdl cdl/microcomputers/bbc/src bbc_display_sram     inc:cdl/inc
cdl cdl/microcomputers/bbc/src bbc_floppy_sram      inc:cdl/inc
cdl cdl/microcomputers/bbc/src bbc_micro_clocking   inc:cdl/inc
cdl cdl/microcomputers/bbc/src bbc_micro_rams       inc:cdl/inc
cdl cdl/microcomputers/bbc/src bbc_micro_with_rams  inc:cdl/inc
cdl_options mul:on
cdl cdl/microcomputers/bbc/src bbc_micro inc:cdl/inc
cdl_options mul:off

cdl cdl/microcomputers/bbc/tb_src tb_bbc_display_sram     inc:cdl/inc

cdl cdl/boards/de1_cl/src          picoriscv_de1_cl  inc:cdl/inc

cdl cdl/boards/de1_cl/src          bbc_micro_de1_cl_bbc  inc:cdl/inc
cdl cdl/boards/de1_cl/src          bbc_micro_de1_cl_io   inc:cdl/inc
cdl cdl/boards/de1_cl/src          bbc_micro_de1_cl      inc:cdl/inc
cdl cdl/boards/de1_cl/src          de1_cl_controls       inc:cdl/inc
cdl cdl/boards/de1_cl/tb_src       tb_de1_cl_controls    inc:cdl/inc

#cdl cdl/boards/de1_cl/src          riscv_adjunct_de1_cl      inc:cdl/inc

cdl cdl/boards/de2/src/            picorisc_de2 inc:cdl/inc

cdl cdl/led/src        led_seven_segment   inc:cdl/inc
cdl cdl/led/src        led_ws2812_chain    inc:cdl/inc
cdl cdl/led/tb_src     tb_led_ws2812_chain inc:cdl/inc

cdl cdl/input_devices/src        ps2_host          inc:cdl/inc
cdl cdl/input_devices/src        ps2_host_keyboard inc:cdl/inc
cdl cdl/input_devices/tb_src     tb_input_devices  inc:cdl/inc

cdl cdl/apb/src  apb_master_mux   inc:cdl/inc
cdl cdl/apb/src  apb_master_axi   inc:cdl/inc
cdl cdl/apb/src  apb_target_gpio   inc:cdl/inc
cdl cdl/apb/src  apb_target_timer  inc:cdl/inc
cdl cdl/apb/src  apb_target_rv_timer  inc:cdl/inc
cdl cdl/apb/src  apb_target_dprintf  inc:cdl/inc
cdl cdl/apb/src  apb_target_led_ws2812  inc:cdl/inc
cdl cdl/apb/src  apb_target_de1_cl_inputs  inc:cdl/inc
cdl cdl/apb/src  apb_target_sram_interface   inc:cdl/inc
cdl cdl/apb/src  apb_target_ps2_host   inc:cdl/inc
cdl cdl/apb/src  apb_processor  inc:cdl/inc
cdl cdl/apb/tb_src  tb_apb_processor  inc:cdl/inc
cdl cdl/apb/tb_src  tb_apb_target_rv_timer  inc:cdl/inc

cdl cdl/csrs/src csr_master_apb      inc:cdl/inc
cdl cdl/csrs/src csr_target_csr      inc:cdl/inc
cdl cdl/csrs/src csr_target_apb      inc:cdl/inc
cdl cdl/csrs/src csr_target_timeout  inc:cdl/inc
cdl cdl/csrs/tb_src tb_csrs          inc:cdl/inc

cdl cdl/boards/de1_cl_hps/src        de1_cl_hps_debug     inc:cdl/inc
cdl cdl/boards/de1_cl_hps/tb_src  tb_de1_cl_hps_debug  inc:cdl/boards/de1_cl_hps/tb_src inc:cdl/inc rit:tb_de1_cl_hps_generic.de1_cl_hps_generic=de1_cl_hps_debug rmn:tb_de1_cl_hps_generic=tb_de1_cl_hps_debug

#a Editor preferences and notes
# Local Variables: ***
# mode: shell ***
# outline-regexp: "#[a!]\\\|#[	 ]*[b-z][	 ]" ***
# End: ***

